1.  
| A | B | C | Y |
-----------------
| 0 | 0 | 0 | 1 |
| 0 | 0 | 1 | 1 |
| 0 | 1 | 0 | 0 |
| 1 | 0 | 0 | 0 |
| 1 | 1 | 0 | 0 |
| 1 | 0 | 1 | 0 |
| 0 | 1 | 1 | 1 |
| 1 | 1 | 1 | 1 |

2.(~A & ~B) | (B & C) = Y

4. No, I do not agree with Rufus as the code will not be an infinite loop. The reason for this being mostly atttributed to the unsigned int of x since the first iteration of the loop, the condition is true because x will be 79. However, as the decrement function is ran on x, it will reach 0 and when it reaches 0, x will underflow. As a result, x will now become the highest value found in the system (depending on the amount of bits). As a result, the condition will no longer be true and thus the loop will finish. 

5.a. 0b00110100
5.b. 0b11001011
5.c. 0b10110011
5.d. 0b11110100

6.a. 127
6.b. -65
6.c. -33 
6.d. 85

7.a.66
7.b.-127 overflow occured
7.c.-10
7.d.56 overflow occured

8.a. 89
8.b. 129
8.c. 44 overflow occured 